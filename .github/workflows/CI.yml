name: Check and test code

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
  - cron: '30 09 * * 1'  # 9:30 every Monday

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-mock pytest-cov
        pip install --upgrade setuptools wheel
        pip install ./msrc-appconfig ./msrc-appconfig-attrs ./msrc-appconfig-dataclasses ./msrc-appconfig-param
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        flake8
    - name: Type check with pyright
      run: |
        npx pyright
    - name: Test with pytest
      run: |
        pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov-report=html --cov-fail-under=100
    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: |
          junit/test-results-${{ matrix.python-version }}.xml
          htmlcov 
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
